6:30 PM 3/13/2017
	Discussed the game plot and layout of the class hierchy with Aaron.

8:15 PM
	Left to get food.
	Log out.

9:40 PM 3/16/2017
	Starting to look at the implementation and want to start with a clean slate
	Creating class Item.

10:15 PM
	Ran into brief roadblock, looking into the requirements of D-level to focus on the basics
	By roadblock I mean, not sure what to prioritize
	- Looking into the Room class and how to hold the items.
	
10:23
	With regard to the NPC we want to make, wondering if we should have their presence
	determined by boolean and "flip" it to change their location OR make an NPC class with
	the killer as an instance, they would then change rooms by being put into that room's list.

	In the latter case, the killer could have it's own current room and search that room for
	exits, randomly choosing one to go through. In that sense, it's location could be managed
	by the game class. BUT that seems like bad coupling.

10:34
	Looking into parser impl. Nevermind, looking at the Game class and then deciding on a
	rough layout of our Rooms

10:41-50
	Writing description of game, also had an idea about character builds and the ability to hide.

10:57
	Adding files to GitHub for initial commit. Ending session.

3:00 PM 3/17/2017
	Starting review of Zuul before Friday submission. Goals, get published to GitHub, determine the
	logs of each participant, address current needs in the program, make progress on the naming and
	structure of the rooms in our Game.map.

	Discussed what would be necessary to keep in our logs as we don't want to be redundant.

3:04
	Brainstorming the storage and creating of rooms:
	- Create and set each exit manually
	- Have one method that takes variable parameters
		- OR a list that has all of the info in one line
	- 
Side note: can add a method to Room called addScene, that would allow for variable descriptions,
	this would be coupled with changeScene which would replace or alter the current description in some way.

	Going to focus on the Game.java class specifically for the turn in today.

3:15
	Wondering if logically there is any way to have the parser handle the commands, or to separate 
	Command from Game or Command from Parser to reduce coupling. It seems redundant to have the class
	connected to both Parser and Game.
	
3:20
	Thinking about the room's fields and the parameters it needs to be created, and what it needs for other scenes
	The constructor will only be able to do a limited amount of what we want to implement
	if it only takes a parameter of longDescription. Would it be better then to have methods
	that create the other scenes, make exits, etc, or to have some of this handled by the constructor.

	- Have a default descripton for rooms that haven't been implemented.
	
3:27
	Going to abstract our map into a separate class so that we can keep the engine and possibly use
	it on different versions of the game.

3:46
	Thinking about the map class and getting the rooming situation sorted out.

3:54 PM
	Turning in now. NOTE: the game does not work, but it does compile. That is all.
	Logging Off.

7:26 PM 3/22/2017
	Log in.
	Aaron working on minigames. Gavin working on class hierchy and some implementation of Game, Map, Item
	Thinking that the map will hold each room and that currentRoom may become a string that is used as a key.
	This has the benefit of keeping the rooms associated with Map and not game directly.

	Want to have the currentRoom var held in each player's fields, rather than inside of game. This has the
	benefit of making it easier to have multiple players controlled by the environment. The main player
	may still have a current room associated with themselves inside of game class, but ideally not. We shall see.

	Side note: I understand why game has access to command words now. I think we can change it. Later.

8:00
	Deciding against having Map class, but want to keep it.

8:28
	Is it worthwhile to keep the current room inside of player? When I think about adding other players,
	I think it is, but game has to provide the information to change player location because Game
	has access to Map.

	It's not worthwhile to have a Map class. making change now.

9:33
	Think that I have travel sorted out.

10:34
	Working on how to have NPC choose an exit, was returning a Set, but no way of choosing one thing within
	a set that I can tell. So I'm changing it to an Array (don't need ArrayList)

10:56
	Forgot how to set length of array. Didn't include "new" oops.

11:15
	Have working version. Very basic, can move through rooms, NPC moves. Need to work on Item and interactions.
	Have decent hierchy in order. Going to sync with Aarons work.

12:02 PM 3/23/2017
	Looking over minigame and hopefully reworking parser and commands. How do we want parser and commands used?
	
	Brainstorming:
	What is our game? It's a text-based rpg that allows one to move between rooms (seeing their descriptions),
	interact with objects in rooms, cause events that change room and item states of being, make items, and more.
	The parser is designed to get an input string from the user every turn, it works beautifully. So, how do
	we determine what is said by the user in a way that applies to all rooms?
	- Well, we currently use a very limited and controlled set of command words in the form of (command, detail)
	  This form does not account for multi word commands, nor single word commands like having a shorthand to go
	  east, west, north, south as e, w, n, s (As is the notation in ZORK)
	- The goal now is to determine what we want to use and plan a system to make that work.

	Generally what command types would there be?
	- Move / Go *
	- Make / Create ***
	- Use *
	- Attack *
	- Talk to *
	- Look
	- Take / Pick up / Grab *
	- Show inventory
	- Show map
	- Get Help / help
	- Quit
	- Open *
	- Lock *
	- Hide
	- Change difficulty (May just have this in the beginning only)
	- Drop / remove *
	
12:45	
	So inside of Game, we'll use processCommand, and let's see if we can deprecate a level of command.
	I'll look at the project desciption for now and see if I can get any ideas.

12:54
	Going to create a separate file with a list of functionality for levels D through A

1:05
	Implementing the back command. Will create a list in player that will hold history of rooms.

1:16
	Should I have the back command take them to their last room, or undo their movements? Think that I'll
	make it easy to switch later on, but use last room for now.

1:26
	Thinking about this:
	roomHistory is {A, B, C}
	Go back
	is {A, B, C, B}

1:30 PM 3/23/2017
	Logging Out. Getting food.

8:35 PM 3/23/2017
	Finishing some changes, then syncing up to review.

9:21 
	Resolving changes on github was a pain. Added some room details.

11:09
	Added functionality to interact with items.
	Getting null pointer exception, exploring why.

11:54
	The Item class works, can pick up and put down objects now. Adding safeguards.

12:48
	We won the basketball game!

1:43 AM 3/24/2017
	Commited to GitHub, improved interaction with items between room and player.
	One of the next goals is to have notifications about the location of the NPC.
	Then I'd like to trigger the fighting minigame that Aaron put together.
	We'll then need to create the weapons class and at that point it will be important
	continue storyboarding and get that sorted out.

2:00 PM 3/24/2017
	Want to add in minigame.
	Want to specialize rooms. (Should use casting)

	Looking at implementation of minigame before discussing with Aaron to use it correctly.

3:13 PM 3/26/2017
	Adding restrictions to player's carry limit.

5:10
	Have been working on Room specialization and have realized that the parser may need to be
	more advanced to get multiple words as the name of an item (Want to say "Office key")
	That or Player needs to have a way of comparing items with room. Which could be returning an item
	or taking an item as input and return its .equals()

7:03
	Back from eating food
	The room's needed key is taken as a string and the player's bag is searched for the key name.
	Now we need to change the parser to understand more and take multi-word items.

7:23
	Editing unlock()

8:09
	Something to note, the lock/unlock feature doesn't lock a door persay, but rather the entire room.

10:30
	Discussed map and room map. Sorted out the main events in the story for our game.

	We have a schizophrenic killer that wakes up in a hospital unaware of his killer background. He
	sees that people have died in the hospital so his goal is to escape the hospital and get to safety.	
	to do that he must get keys to certain rooms and turn on the power to unlock the doors. In the process
	he will find out who he is and his condition. When he escapes, he will be captured by the police
	and will realize that he is the killer and the truth behind descriptions during the game.
	(Ignoring pronoun inclusiveness for those who care)

11:49
	Going to edit the description files for the project to reflect our contributions.

4:21 PM 3/29/2017
	Have recently fixed a large conflict between branches due to not working from the latest version.
	Learning more about GitHub because of that issue. Also looking into creating the game based on a file
	and reading the input which should be fun. Think the book has something about this.

12:45 PM 3/30/2017
	Been working for about an hour now, the init file works, now I'm expanding it to have further safety checks
	and account for more, i.e. special rooms and items.
	THEN I think it'd be REALLY cool to test out a save / load game feature.

2:00 PM
	Log out.

4:45 PM
	Noticed that the intialization becomes complicated when there are multiple types of rooms.
