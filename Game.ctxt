#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method\ to\ play\ outside\ of\ BlueJ\r\n\ @param\ none\r\n
comment10.params=player
comment10.target=void\ look(Player)
comment10.text=\r\n\ Prints\ the\ current\ room's\ exit\ directions\ and\ items\ contained\r\n
comment11.params=
comment11.target=void\ printHelp()
comment11.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment12.params=command
comment12.target=void\ interact(Command)
comment13.params=
comment13.target=void\ drunkenTransport()
comment14.params=
comment14.target=void\ turnOnPower()
comment15.params=
comment15.target=void\ getCaseFiles()
comment16.params=command
comment16.target=void\ goRoom(Command)
comment16.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ @param\ Command\ user\ input\ for\ chosen\ room\r\n
comment17.params=player
comment17.target=void\ hide(Player)
comment17.text=\r\n\ Hides\ the\ player\ from\ the\ other\ characters.\ If\ the\ room\ supports\ hiding,\r\n\ the\ player\ won't\ get\ into\ a\ fight\ with\ them\ while\ they\ are\ hiding.\r\n\ Looking\ for\ a\ place\ to\ hide\ does\ let\ the\ NPC\ move\ though,\ so\ if\ the\r\n\ room\ doesn't\ have\ any\ place,\ the\ player\ may\ be\ found.\r\n\ @param\ Player\ usually\ main\ character\r\n
comment18.params=player
comment18.target=void\ unhide(Player)
comment19.params=command
comment19.target=boolean\ quit(Command)
comment19.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ play()
comment2.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment20.params=player\ command
comment20.target=void\ pickUp(Player,\ Command)
comment20.text=\r\n\ Picks\ up\ an\ item.\ I.e.\ removes\ it\ from\ a\ the\ current\ room\ if\ it\ exists\ and\ adds\r\n\ it\ to\ the\ player's\ inventory.\r\n\ @param\ Player,\ Command\ as\ the\ item\ name\r\n
comment21.params=player\ command
comment21.target=void\ putDown(Player,\ Command)
comment21.text=\r\n\ Puts\ down\ an\ item\ in\ the\ current\ room\ and\ takes\ it\ out\ of\ inventory.\r\n\ @param\ Player,\ Command\ as\ the\ item\ name\r\n
comment22.params=player\ command\ locking
comment22.target=void\ changeLockTo(Player,\ Command,\ boolean)
comment22.text=\r\n\ Locks\ or\ unlocks\ the\ room\ if\ it\ is\ next\ to\ player\r\n\ @param\ Player\ main\ character\ usually,\ Command\ user\ input,\ boolean\ "Are\ you\ locking\ room?"\r\n
comment23.params=player\ command
comment23.target=void\ fight(Player,\ Command)
comment23.text=\r\n\ Puts\ the\ given\ characters\ into\ a\ fight\ scene\r\n\ @param\ Player\ the\ main\ character,\ Command\ contains\ the\ player\ to\ fight\r\n
comment24.params=player
comment24.target=void\ checkFightTrigger(Player)
comment24.text=\r\n\ Checks\ whether\ the\ hero\ has\ encountered\ a\ killer\ and\ triggers\ a\ fight\ if\ so.\r\n\ @param\ Player\ being\ controlled\r\n
comment25.params=player\ opponent
comment25.target=void\ triggerFight(Player,\ NPC)
comment25.text=\r\n\ Triggers\ fight\ with\ the\ two\ parameters\ given.\ Usually\ the\ Player\ and\ NPC\r\n\ @Param\ Player\ the\ hero/MC,\ NPC\ the\ villain\ or\ interactable\ friendly\r\n
comment26.params=
comment26.target=void\ winGame()
comment26.text=\r\n\ End\ game\r\n
comment27.params=
comment27.target=void\ moveNPC()
comment27.text=\r\n\ Moves\ each\ NPC\ in\ the\ Map\ into\ an\ adjacent\ room\ if\ it\ is\ available\r\n\ Then\ checks\ for\ a\ fight\r\n
comment28.params=
comment28.target=void\ makeCharacters()
comment28.text=\r\n\ Makes\ the\ characters\ involved\ in\ the\ game\r\n\ This\ includes\ the\ hero\ and\ villain,\ but\ can\ have\ side\ characters\ as\ well.\r\n
comment29.params=initFile
comment29.target=void\ worldInit(java.util.Scanner)
comment29.text=\r\n\ Create\ the\ world\ map\ by\ filling\ it\ with\ rooms\r\n\ Setting\ their\ exits\r\n\ And\ making\ items\ to\ put\ in\ each.\r\n\ Prints\ to\ terminal\ if\ anything\ is\ wrong\ in\ the\ init\ file\r\n\ \r\n\ @param\ Scanner\ made\ from\ the\ .txt\ file\ containing\ map\ info\r\n
comment3.params=
comment3.target=void\ displayMapFull()
comment3.text=\r\n\ Displays\ map\ and\ room\ items\r\n
comment4.params=type\ title\ key\ description
comment4.target=Room\ createRoom(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Casts\ room\ into\ correct\ type\r\n\ @return\ Room\ some\ type\ of\ room\r\n\ @param\ Type\ of\ room,\ Title\ of\ room,\ Key\ (if\ relevant),\ Description\ of\ room\r\n
comment5.params=type\ name\ weight\ canTake\ powerLevel
comment5.target=Item\ createItem(java.lang.String,\ java.lang.String,\ double,\ boolean,\ double)
comment5.text=\r\n\ Creates\ a\ specific\ type\ of\ item,\ necessary\ during\ init\ to\ avoid\ code\ duplication\r\n\ @return\ Item\ of\ varying\ type\r\n\ @param\ String\ type,\ String\ name,\ double\ weight,\ boolean\ canTake,\ double\ powerLevel\r\n
comment6.params=
comment6.target=void\ printWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment7.params=command
comment7.target=boolean\ processCommand(Command)
comment7.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ if\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment8.params=command
comment8.target=void\ equip(Command)
comment8.text=\r\n\ Equips\ a\ weapon\ if\ it\ is\ in\ the\ player's\ inventory\r\n\ @param\ A\ Command\ that\ indicates\ what\ to\ equip\r\n
comment9.params=player
comment9.target=void\ goBack(Player)
comment9.text=\r\n\ Returns\ player\ to\ the\ previous\ room.\ This\ means\ that\ if\ this\r\n\ is\ called\ each\ turn,\ the\ player\ will\ alternate\ between\ two\ rooms\r\n\ DANGER\:\ This\ currently\ would\ bypass\ locked\ doors\ and\ trapdoors\ as\r\n\ it\ goes\ directly\ to\ the\ room\ without\ checking\ if\ it\ can\ be\ entered.\r\n
numComments=30
